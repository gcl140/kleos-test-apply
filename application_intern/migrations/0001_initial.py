# Generated by Django 5.1.5 on 2025-03-10 09:01

import application_intern.models
import datetime
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationIntern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted', models.BooleanField(default=False)),
                ('agreed', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=500)),
                ('middle_name', models.CharField(blank=True, max_length=500, null=True)),
                ('last_name', models.CharField(max_length=500)),
                ('dob', models.DateField(default=datetime.date(2025, 1, 1))),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=50)),
                ('nationality', models.CharField(choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (DRC)'), ('CR', 'Costa Rica'), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura√ßao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GR', 'Greece'), ('GD', 'Grenada'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', 'Korea (North)'), ('KR', 'Korea (South)'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macau'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('MK', 'North Macedonia'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PL', 'Poland'), ('PT', 'Portugal'), ('QA', 'Qatar'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('US', 'United States'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='TZ', max_length=500)),
                ('place_of_birth', models.CharField(max_length=500)),
                ('residency', models.TextField(max_length=500)),
                ('tel1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('tel2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email1', models.EmailField(max_length=254)),
                ('email2', models.EmailField(blank=True, max_length=254, null=True)),
                ('adv_school_name', models.CharField(max_length=500)),
                ('adv_school_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('adv_school_email', models.EmailField(max_length=254)),
                ('adv_curriculum', models.CharField(choices=[('NECTA', 'NECTA'), ('IB', 'IB'), ('CAMBRIDGE', 'Cambridge'), ('OTHER', 'Other')], default='NECTA', max_length=500)),
                ('report_other_adv', models.BooleanField(default=False)),
                ('other_adv_school_name', models.CharField(blank=True, max_length=500, null=True)),
                ('other_adv_school_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('other_adv_school_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('other_adv_curriculum', models.CharField(blank=True, choices=[('NECTA', 'NECTA'), ('IB', 'IB'), ('CAMBRIDGE', 'Cambridge'), ('OTHER', 'Other')], max_length=500, null=True)),
                ('olv_school_name', models.CharField(max_length=500)),
                ('olv_school_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('olv_school_email', models.EmailField(max_length=254)),
                ('olv_curriculum', models.CharField(choices=[('NECTA', 'NECTA'), ('IB', 'IB'), ('CAMBRIDGE', 'Cambridge'), ('OTHER', 'Other')], default='NECTA', max_length=500)),
                ('report_other_olv', models.BooleanField(default=False)),
                ('other_olv_school_name', models.CharField(blank=True, max_length=500, null=True)),
                ('other_olv_school_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('other_olv_school_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('other_olv_curriculum', models.CharField(blank=True, choices=[('NECTA', 'NECTA'), ('IB', 'IB'), ('CAMBRIDGE', 'Cambridge'), ('OTHER', 'Other')], max_length=500, null=True)),
                ('par1_fname', models.CharField(max_length=500)),
                ('par1_mname', models.CharField(blank=True, max_length=500, null=True)),
                ('par1_lname', models.CharField(max_length=500)),
                ('par1_email', models.EmailField(max_length=254)),
                ('par1_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('par1_jobbusy', models.CharField(max_length=500)),
                ('par1_jobtitle', models.CharField(blank=True, max_length=500, null=True)),
                ('par1_employmentstatus', models.CharField(choices=[('Employed', 'Employed'), ('Self Employed', 'Self Employed'), ('Unemployed', 'Unemployed'), ('Retired', 'Retired')], max_length=500)),
                ('par1_retire', models.DateField(blank=True, null=True)),
                ('par1_served', models.PositiveIntegerField(default=0)),
                ('par1_levedu', models.CharField(blank=True, choices=[('Primary', 'Primary education'), ('Secondary', 'Secondary Education'), ('High School', 'High School or Vocational training education'), ('Bachelor degree', 'Bachelors degree or equivalent level'), ('Masters Degree', 'Masters degree or equivalent level'), ('PhD', 'PhD')], max_length=500, null=True)),
                ('par1_institute', models.CharField(blank=True, max_length=500, null=True)),
                ('par1_degree', models.CharField(blank=True, max_length=500, null=True)),
                ('par1_degreeyear', models.PositiveIntegerField(blank=True, null=True)),
                ('report_other_par', models.BooleanField(default=False)),
                ('par2_fname', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_mname', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_lname', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('par2_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('par2_retire', models.DateField(blank=True, null=True)),
                ('par2_served', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('par2_jobbusy', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_jobtitle', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_employmentstatus', models.CharField(blank=True, choices=[('Employed', 'Employed'), ('Self Employed', 'Self Employed'), ('Unemployed', 'Unemployed'), ('Retired', 'Retired')], max_length=500, null=True)),
                ('par2_levedu', models.CharField(blank=True, choices=[('Primary', 'Primary education'), ('Secondary', 'Secondary Education'), ('High School', 'High School or Vocational training education'), ('Bachelor degree', 'Bachelors degree or equivalent level'), ('Masters Degree', 'Masters degree or equivalent level'), ('PhD', 'PhD')], max_length=500, null=True)),
                ('par2_institute', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_degree', models.CharField(blank=True, max_length=500, null=True)),
                ('par2_degreeyear', models.PositiveIntegerField(blank=True, null=True)),
                ('f_payer_olevel', models.CharField(max_length=500)),
                ('f_payer_alevel', models.CharField(max_length=500)),
                ('o_fee', models.FloatField(default=0.0)),
                ('a_fee', models.FloatField(default=0.0)),
                ('suprt', models.BooleanField(default=False)),
                ('suprt_amnt', models.FloatField(blank=True, null=True)),
                ('suprt_name', models.CharField(blank=True, max_length=500, null=True)),
                ('home_fees', models.BooleanField(default=False)),
                ('suprtc', models.TextField(blank=True, null=True)),
                ('fav_hobby', models.TextField(blank=True, null=True)),
                ('form4_holiday', models.TextField(blank=True, null=True)),
                ('soc_challenge', models.TextField(blank=True, null=True)),
                ('sat_for_sat', models.BooleanField(default=False)),
                ('sat_type', models.CharField(blank=True, choices=[('SAT', 'SAT'), ('SAT Subject Test', 'SAT Subject Test'), ('ACT', 'ACT'), ('AP', 'AP'), ('Other', 'Other')], max_length=500, null=True)),
                ('sat_score', models.CharField(blank=True, max_length=500, null=True)),
                ('sat_date', models.DateField(blank=True, null=True)),
                ('sat_for_eng', models.BooleanField(default=False)),
                ('eng_type', models.CharField(blank=True, choices=[('TOEFL', 'TOEFL'), ('IELTS', 'IELTS'), ('Duolingo', 'Duolingo'), ('Other', 'Other')], max_length=500, null=True)),
                ('eng_score', models.CharField(blank=True, max_length=500, null=True)),
                ('eng_date', models.DateField(blank=True, null=True)),
                ('has_passport', models.BooleanField(default=False)),
                ('passport_purpose', models.TextField(blank=True, null=True)),
                ('owns_phone', models.BooleanField(default=False)),
                ('phone_maker', models.CharField(blank=True, max_length=500, null=True)),
                ('phone_model', models.CharField(blank=True, max_length=500, null=True)),
                ('known_tansaf_ig', models.BooleanField(default=False)),
                ('known_tansaf_fb', models.BooleanField(default=False)),
                ('known_tansaf_int', models.BooleanField(default=False)),
                ('known_tansaf_tans', models.BooleanField(default=False)),
                ('known_tansaf_fam', models.BooleanField(default=False)),
                ('known_tansaf_other', models.BooleanField(default=False)),
                ('known_tansaf_other_write', models.CharField(blank=True, max_length=500, null=True)),
                ('extrac', models.TextField()),
                ('chlg', models.TextField()),
                ('cohort', models.TextField()),
                ('teach', models.TextField()),
                ('why_you', models.TextField()),
                ('why_tansaf', models.TextField()),
                ('covid_impact', models.BooleanField(default=False)),
                ('covid_impact_details', models.TextField(blank=True, null=True)),
                ('has_disciplinary_violation', models.BooleanField(default=False)),
                ('disciplinary_details', models.TextField(blank=True, null=True)),
                ('additional_circumstances', models.BooleanField(default=False)),
                ('additional_circumstances_details', models.TextField(blank=True, null=True)),
                ('financial', models.FileField(upload_to=application_intern.models.user_upload_path)),
                ('rec_letter1', models.FileField(upload_to=application_intern.models.user_upload_path)),
                ('rec_letter2', models.FileField(blank=True, null=True, upload_to=application_intern.models.user_upload_path)),
                ('adv_certificates', models.FileField(blank=True, null=True, upload_to=application_intern.models.user_upload_path)),
                ('olv_certificates', models.FileField(upload_to=application_intern.models.user_upload_path)),
                ('a_level_school_transcripts', models.FileField(upload_to=application_intern.models.user_upload_path)),
                ('o_level_school_transcripts', models.FileField(upload_to=application_intern.models.user_upload_path)),
                ('official_id', models.FileField(upload_to=application_intern.models.user_upload_path)),
                ('supps', models.FileField(blank=True, null=True, upload_to=application_intern.models.user_upload_path)),
                ('signature', models.CharField(max_length=500)),
                ('signdate', models.DateField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('intro_completed', models.BooleanField(default=False)),
                ('general_info_completed', models.BooleanField(default=False)),
                ('contact_info_completed', models.BooleanField(default=False)),
                ('school_info_completed', models.BooleanField(default=False)),
                ('family_info_completed', models.BooleanField(default=False)),
                ('siblings_completed', models.BooleanField(default=True)),
                ('dependents_completed', models.BooleanField(default=True)),
                ('financial_info_completed', models.BooleanField(default=False)),
                ('activities_completed', models.BooleanField(default=True)),
                ('distinctions_completed', models.BooleanField(default=True)),
                ('other_inquiries_completed', models.BooleanField(default=True)),
                ('writing_completed', models.BooleanField(default=False)),
                ('files_signature', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('Academic', 'Academic'), ('Art', 'Art'), ('Athletics', 'Athletics'), ('Community Service', 'Community Service'), ('Computer/Technology', 'Computer/Technology'), ('Cultural', 'Cultural'), ('Dance', 'Dance'), ('Debate/Speech', 'Debate/Speech'), ('Environmental', 'Environmental'), ('Family Responsibilities', 'Family Responsibilities'), ('Foreign Exchange', 'Foreign Exchange'), ('Foreign Language', 'Foreign Language'), ('Journalism', 'Journalism'), ('Music: Instrumental', 'Music: Instrumental'), ('Music: Vocal', 'Music: Vocal'), ('Religious', 'Religious'), ('Research', 'Research'), ('Robotics', 'Robotics'), ('School spirit', 'School spirit'), ('Robotics', 'Robotics'), ('Science/Math', 'Science/Math'), ('Social Justice', 'Social Justice'), ('Student Govt./Politics', 'Student Govt./Politics'), ('Theatre/Drama', 'Theatre/Drama'), ('Work(Paid)', 'Work(Paid)'), ('Other Club/Activity', 'Other Club/Activity')], max_length=500)),
                ('leadership_position', models.CharField(blank=True, max_length=500, null=True)),
                ('organization_name', models.CharField(blank=True, max_length=5005, null=True)),
                ('weeksperyear', models.PositiveIntegerField(blank=True, null=True)),
                ('hoursperweek', models.PositiveIntegerField(blank=True, null=True)),
                ('activity_description', models.TextField(blank=True, null=True)),
                ('outside_school', models.BooleanField(default=False)),
                ('start_year', models.CharField(blank=True, choices=[('Grade 9', 'Grade 9/ Form 3'), ('Grade 10', 'Grade 10/ Form 4'), ('Grade 11', 'Grade 11/ Form 5'), ('Grade 12', 'Grade 12/ Form 6')], max_length=500, null=True)),
                ('end_year', models.CharField(blank=True, choices=[('Grade 9', 'Grade 9/ Form 3'), ('Grade 10', 'Grade 10/ Form 4'), ('Grade 11', 'Grade 11/ Form 5'), ('Grade 12', 'Grade 12/ Form 6')], max_length=500, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_intern_activities', to='application_intern.applicationintern')),
            ],
        ),
        migrations.CreateModel(
            name='Dependent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependent_name', models.CharField(blank=True, max_length=500, null=True)),
                ('relationship', models.CharField(blank=True, max_length=500, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_intern_dependents', to='application_intern.applicationintern')),
            ],
        ),
        migrations.CreateModel(
            name='Distinction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distinction_name', models.CharField(blank=True, max_length=500, null=True)),
                ('level_of_rec', models.CharField(blank=True, choices=[('School', 'School'), ('District', 'District'), ('Regional', 'Regional'), ('National', 'National'), ('International', 'International')], max_length=500, null=True)),
                ('year', models.CharField(blank=True, choices=[('Grade 9', 'Grade 9/ Form 3'), ('Grade 10', 'Grade 10/ Form 4'), ('Grade 11', 'Grade 11/ Form 5'), ('Grade 12', 'Grade 12/ Form 6')], max_length=500, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_intern_distinctions', to='application_intern.applicationintern')),
            ],
        ),
        migrations.CreateModel(
            name='Sibling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sibling_name', models.CharField(blank=True, max_length=500, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('education', models.CharField(blank=True, choices=[('Primary', 'Primary education'), ('Secondary', 'Secondary Education'), ('High School', 'High School or Vocational training education'), ('Bachelor degree', 'Bachelors degree or equivalent level'), ('Masters', 'Masters degree or equivalent level'), ('PhD', 'PhD')], max_length=500, null=True)),
                ('institute', models.CharField(blank=True, max_length=500, null=True)),
                ('degree', models.CharField(blank=True, max_length=500, null=True)),
                ('occupation', models.CharField(blank=True, max_length=500, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_intern_siblings', to='application_intern.applicationintern')),
            ],
        ),
    ]
